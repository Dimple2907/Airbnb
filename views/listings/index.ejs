<%- layout("/layouts/boilerplate") %>

<style>
    .hero-section {
        background: linear-gradient(135deg, rgba(254, 66, 77, 0.1) 0%, rgba(255, 107, 122, 0.1) 100%);
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 1rem;
        text-align: center;
    }
    
    .hero-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        background: linear-gradient(135deg, #fe424d 0%, #ff6b7a 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
      .hero-subtitle {
        font-size: 1.2rem;
        color: #666;
        margin-bottom: 0;
    }
    
    .search-container {
        background: white;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        margin: 2rem auto;
        max-width: 1200px;
    }
    
    .advanced-search-form .form-label {
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
    }
    
    .advanced-search-form .form-control,
    .advanced-search-form .form-select {
        border: 2px solid #e1e5e9;
        border-radius: 0.5rem;
        padding: 0.75rem;
        transition: all 0.3s ease;
    }
    
    .advanced-search-form .form-control:focus,
    .advanced-search-form .form-select:focus {
        border-color: #fe424d;
        box-shadow: 0 0 0 0.2rem rgba(254, 66, 77, 0.25);
    }
    
    .advanced-search-form .btn-primary {
        background: linear-gradient(135deg, #fe424d 0%, #ff6b7a 100%);
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }
    
    .advanced-search-form .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(254, 66, 77, 0.3);
    }
    
    .advanced-search-form .btn-outline-secondary {
        border: 2px solid #6c757d;
        color: #6c757d;
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
        transition: all 0.3s ease;
    }
      .advanced-search-form .btn-outline-secondary:hover {
        background: #6c757d;
        color: white;
        transform: translateY(-2px);
    }
    
    .active-filters {
        background: #f8f9fa;
        padding: 1rem 0;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }
    
    .filter-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    .filter-tag {
        background: linear-gradient(135deg, #fe424d 0%, #ff6b7a 100%);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-size: 0.875rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: 0 2px 8px rgba(254, 66, 77, 0.3);
    }
    
    .remove-filter {
        color: white;
        text-decoration: none;
        font-weight: bold;
        font-size: 1.2rem;
        line-height: 1;
        transition: all 0.3s ease;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(255, 255, 255, 0.2);
    }
    
    .remove-filter:hover {
        color: white;
        background: rgba(255, 255, 255, 0.3);
        transform: scale(1.1);
    }
    
    #filters {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 1rem;
        padding: 1.5rem 0;
        border-bottom: 2px solid #f0f0f0;
        margin-bottom: 2rem;
        position: sticky;
        top: 80px;
        background: white;
        z-index: 100;
        border-radius: 1rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    
    .filter {
        text-align: center;
        padding: 1rem 1.5rem;
        border-radius: 1rem;
        transition: all 0.3s ease;
        cursor: pointer;
        background: white;
        border: 2px solid #e1e5e9;
        min-width: 90px;
        position: relative;
        overflow: hidden;
    }
    
    .filter::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #fe424d 0%, #ff6b7a 100%);
        transition: left 0.3s ease;
        z-index: -1;
    }
    
    .filter:hover::before,
    .filter.active::before {
        left: 0;
    }
    
    .filter:hover,
    .filter.active {
        color: white;
        border-color: #fe424d;
        transform: translateY(-3px);
        box-shadow: 0 6px 20px rgba(254, 66, 77, 0.3);
    }
    
    .filter i {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
        display: block;
        transition: transform 0.3s ease;
    }
    
    .filter:hover i {
        transform: scale(1.1);
    }
    
    .filter p {
        font-size: 0.85rem;
        margin: 0;
        font-weight: 600;
        letter-spacing: 0.5px;
    }
    
    .tax-toggle {
        border: 2px solid #333;
        border-radius: 1rem;
        padding: 1rem 1.5rem;
        display: flex;
        align-items: center;
        background: white;
        transition: all 0.3s ease;
        margin-left: auto;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    .tax-toggle:hover {
        border-color: #fe424d;
        box-shadow: 0 4px 15px rgba(254, 66, 77, 0.2);
        transform: translateY(-2px);
    }
    
    .tax-toggle label {
        font-weight: 600;
        color: #333;
        cursor: pointer;
    }
    
    .listings-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
    }
    
    .listing-item {
        position: relative;
        border-radius: 1rem;
        overflow: hidden;
        background: white;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }
    
    .listing-item:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 30px rgba(0,0,0,0.15);
    }
    
    .listing-image {
        position: relative;
        overflow: hidden;
    }
    
    .listing-image img {
        width: 100%;
        height: 250px;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .listing-item:hover .listing-image img {
        transform: scale(1.1);
    }
    
    .listing-info {
        padding: 1.5rem;
    }
    
    .listing-title {
        font-size: 1.1rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: #333;
    }
    
    .listing-price {
        font-size: 1rem;
        font-weight: 600;
        color: #fe424d;
        margin-bottom: 0.5rem;
    }
    
    .tax-info {
        display: none;
        font-size: 0.85rem;
        color: #666;
        font-style: italic;
    }
    
    .listing-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: rgba(255, 255, 255, 0.95);
        color: #fe424d;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-weight: 600;
        font-size: 0.85rem;
        backdrop-filter: blur(10px);
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #666;
    }
    
    .empty-state i {
        font-size: 4rem;
        color: #fe424d;
        margin-bottom: 1rem;
    }
    
    .loading-skeleton {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
    }
    
    @keyframes loading {
        0% { background-position: 200% 0; }
        100% { background-position: -200% 0; }
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
        .hero-title {
            font-size: 2rem;
        }
        
        .hero-subtitle {
            font-size: 1rem;
        }
        
        #filters {
            top: 70px;
            padding: 1rem;
            gap: 0.5rem;
            justify-content: center;
        }
        
        .filter {
            min-width: 70px;
            padding: 0.75rem 1rem;
        }
        
        .filter i {
            font-size: 1.2rem;
        }
        
        .filter p {
            font-size: 0.75rem;
        }
        
        .tax-toggle {
            margin-left: 0;
            margin-top: 1rem;
            width: 100%;
            justify-content: center;
        }
        
        .listings-grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }
        
        .listing-image img {
            height: 200px;
        }
          .listing-info {
            padding: 1rem;
        }
        
        .search-container {
            margin: 1rem;
            padding: 1.5rem;
        }
        
        .advanced-search-form .col-md-3,
        .advanced-search-form .col-md-2,
        .advanced-search-form .col-md-1,
        .advanced-search-form .col-md-4 {
            margin-bottom: 1rem;
        }
        
        .filter-tags {
            flex-direction: column;
            align-items: stretch;
        }
        
        .filter-tag {
            justify-content: space-between;
            margin-bottom: 0.5rem;
        }
    }
    
    @media (max-width: 576px) {
        .hero-section {
            padding: 1.5rem 1rem;
            margin: 1rem 0;
        }
        
        .hero-title {
            font-size: 1.8rem;
        }
        
        #filters {
            padding: 0.75rem;
            border-radius: 0.5rem;
        }
        
        .filter {
            min-width: 60px;
            padding: 0.5rem 0.75rem;
        }
          .listings-grid {
            gap: 1rem;
        }
        
        .search-container {
            margin: 0.5rem;
            padding: 1rem;
        }
        
        .hero-section {
            margin: 0.5rem 0;
        }
        
        .advanced-search-form .form-label {
            font-size: 0.9rem;
        }
        
        .advanced-search-form .form-control,
        .advanced-search-form .form-select {
            padding: 0.5rem;
            font-size: 0.9rem;
        }
        
        .filter-tag {
            font-size: 0.8rem;
            padding: 0.4rem 0.8rem;
        }
    }
</style>

<div class="hero-section">
    <h1 class="hero-title">Find Your Perfect Stay</h1>
    <p class="hero-subtitle">Discover amazing places around the world</p>
    
    <!-- Advanced Search Section -->
    <div class="search-container mt-4">
        <form action="/listings" method="GET" class="advanced-search-form">
            <div class="row g-3 align-items-end">
                <div class="col-md-3">
                    <label for="searchInput" class="form-label text-start">Search</label>
                    <input type="text" class="form-control" id="searchInput" name="search" 
                           placeholder="Title, location, description..." 
                           value="<%= typeof searchParams !== 'undefined' && searchParams.search ? searchParams.search : '' %>">
                </div>
                <div class="col-md-2">
                    <label for="locationInput" class="form-label">Location</label>
                    <input type="text" class="form-control" id="locationInput" name="location" 
                           placeholder="City" 
                           value="<%= typeof searchParams !== 'undefined' && searchParams.location ? searchParams.location : '' %>">
                </div>
                <div class="col-md-2">
                    <label for="countryInput" class="form-label">Country</label>
                    <input type="text" class="form-control" id="countryInput" name="country" 
                           placeholder="Country" 
                           value="<%= typeof searchParams !== 'undefined' && searchParams.country ? searchParams.country : '' %>">
                </div>
                <div class="col-md-2">
                    <label for="minPrice" class="form-label">Min Price</label>
                    <input type="number" class="form-control" id="minPrice" name="minPrice" 
                           placeholder="₹0" 
                           value="<%= typeof searchParams !== 'undefined' && searchParams.minPrice ? searchParams.minPrice : '' %>">
                </div>
                <div class="col-md-2">
                    <label for="maxPrice" class="form-label">Max Price</label>
                    <input type="number" class="form-control" id="maxPrice" name="maxPrice" 
                           placeholder="₹10000" 
                           value="<%= typeof searchParams !== 'undefined' && searchParams.maxPrice ? searchParams.maxPrice : '' %>">
                </div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
            
            <div class="row g-3 mt-2">
                <div class="col-md-4">
                    <label for="sortBy" class="form-label">Sort By</label>
                    <select class="form-select" id="sortBy" name="sortBy">
                        <option value="" <%= typeof searchParams === 'undefined' || !searchParams.sortBy ? 'selected' : '' %>>Default</option>
                        <option value="priceLow" <%= typeof searchParams !== 'undefined' && searchParams.sortBy === 'priceLow' ? 'selected' : '' %>>Price: Low to High</option>
                        <option value="priceHigh" <%= typeof searchParams !== 'undefined' && searchParams.sortBy === 'priceHigh' ? 'selected' : '' %>>Price: High to Low</option>
                        <option value="newest" <%= typeof searchParams !== 'undefined' && searchParams.sortBy === 'newest' ? 'selected' : '' %>>Newest First</option>
                        <option value="oldest" <%= typeof searchParams !== 'undefined' && searchParams.sortBy === 'oldest' ? 'selected' : '' %>>Oldest First</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <button type="button" class="btn btn-outline-secondary" id="clearFilters">
                        <i class="fas fa-times"></i> Clear Filters
                    </button>
                </div>
                <div class="col-md-4 text-end">
                    <small class="text-muted">
                        <% if(typeof allListings !== 'undefined') { %>
                            Found <%= allListings.length %> listing(s)
                        <% } %>
                    </small>
                </div>
            </div>        </form>
    </div>
    
    <!-- Active Filters Display -->
    <% if(typeof searchParams !== 'undefined' && (searchParams.search || searchParams.category || searchParams.location || searchParams.country || searchParams.minPrice || searchParams.maxPrice)) { %>
        <div class="active-filters mt-3">
            <div class="container">
                <h6 class="mb-2">Active Filters:</h6>
                <div class="filter-tags">
                    <% if(searchParams.search) { %>
                        <span class="filter-tag">
                            Search: <strong><%= searchParams.search %></strong>
                            <a href="<%= removeParam('search', searchParams) %>" class="remove-filter">×</a>
                        </span>
                    <% } %>
                    <% if(searchParams.category) { %>
                        <span class="filter-tag">
                            Category: <strong><%= searchParams.category %></strong>
                            <a href="<%= removeParam('category', searchParams) %>" class="remove-filter">×</a>
                        </span>
                    <% } %>
                    <% if(searchParams.location) { %>
                        <span class="filter-tag">
                            Location: <strong><%= searchParams.location %></strong>
                            <a href="<%= removeParam('location', searchParams) %>" class="remove-filter">×</a>
                        </span>
                    <% } %>
                    <% if(searchParams.country) { %>
                        <span class="filter-tag">
                            Country: <strong><%= searchParams.country %></strong>
                            <a href="<%= removeParam('country', searchParams) %>" class="remove-filter">×</a>
                        </span>
                    <% } %>
                    <% if(searchParams.minPrice || searchParams.maxPrice) { %>
                        <span class="filter-tag">
                            Price: <strong>₹<%= searchParams.minPrice || '0' %> - ₹<%= searchParams.maxPrice || '∞' %></strong>
                            <a href="<%= removeParam(['minPrice', 'maxPrice'], searchParams) %>" class="remove-filter">×</a>
                        </span>
                    <% } %>
                    <% if(searchParams.sortBy) { %>
                        <span class="filter-tag">
                            Sort: <strong><%= searchParams.sortBy %></strong>
                            <a href="<%= removeParam('sortBy', searchParams) %>" class="remove-filter">×</a>
                        </span>
                    <% } %>
                </div>
            </div>
        </div>
    <% } %>
</div>

<div id="filters">
    <div class="filter" data-category="trending">
        <div><i class="fa-solid fa-fire"></i></div>
        <p>Trending</p>
    </div>
    <div class="filter" data-category="rooms">
        <div><i class="fa-solid fa-bed"></i></div>
        <p>Rooms</p>
    </div>
    <div class="filter" data-category="food">
        <div><i class="fa-solid fa-utensils"></i></div>
        <p>Food</p>
    </div>
    <div class="filter" data-category="wifi">
        <div><i class="fa-solid fa-wifi"></i></div>
        <p>Wifi</p>
    </div>
    <div class="filter" data-category="pool">
        <div><i class="fa-solid fa-swimmer"></i></div>
        <p>Pool</p>
    </div>
    <div class="filter" data-category="cities">
        <div><i class="fa-solid fa-mountain-city"></i></div>
        <p>Iconic Cities</p>
    </div>
    <div class="filter" data-category="beach">
        <div><i class="fa-solid fa-umbrella-beach"></i></div>
        <p>Beach</p>
    </div>
    <div class="filter" data-category="mountains">
        <div><i class="fa-solid fa-mountain"></i></div>
        <p>Mountains</p>
    </div>
    <div class="filter" data-category="castles">
        <div><i class="fa-solid fa-chess-rook"></i></div>
        <p>Castles</p>
    </div>
    <div class="filter" data-category="adventure">
        <div><i class="fa-solid fa-bicycle"></i></div>
        <p>Adventure</p>
    </div>
    <div class="filter" data-category="hiking">
        <div><i class="fa-solid fa-hiking"></i></div>
        <p>Hiking</p>
    </div>

    <div class="tax-toggle">
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault">
            <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
        </div>
    </div>
</div>

<div class="listings-grid">
    <% if(allListings && allListings.length > 0) { %>
        <% for(let listing of allListings) { %>
            <a href="/listings/<%= listing._id %>" class="listing-link">
                <div class="listing-item">
                    <div class="listing-image">
                        <img src="<%= listing.image.url %>" alt="<%= listing.title %>" loading="lazy">
                        <div class="listing-badge">
                            &#8377;<%= listing.price.toLocaleString("en-IN") %>/night
                        </div>
                    </div>
                    <div class="listing-info">
                        <h3 class="listing-title"><%= listing.title %></h3>
                        <p class="listing-price">
                            &#8377; <%= listing.price.toLocaleString("en-IN") %> /night
                            <span class="tax-info">+18% GST</span>
                        </p>
                    </div>
                </div>
            </a>
        <% } %>    <% } else { %>
        <div class="empty-state">
            <i class="fas fa-search-minus"></i>
            <% if(typeof searchParams !== 'undefined' && (searchParams.search || searchParams.category || searchParams.location || searchParams.country || searchParams.minPrice || searchParams.maxPrice)) { %>
                <h3>No listings match your search</h3>
                <p>We couldn't find any listings that match your current filters.</p>
                <div class="mt-3">
                    <button class="btn btn-outline-primary" onclick="window.location.href='/listings'">
                        <i class="fas fa-refresh"></i> Clear All Filters
                    </button>
                    <% if(searchParams.search) { %>
                        <p class="mt-2 text-muted">Searched for: "<strong><%= searchParams.search %></strong>"</p>
                    <% } %>
                    <% if(searchParams.location) { %>
                        <p class="mt-1 text-muted">Location: <strong><%= searchParams.location %></strong></p>
                    <% } %>
                    <% if(searchParams.country) { %>
                        <p class="mt-1 text-muted">Country: <strong><%= searchParams.country %></strong></p>
                    <% } %>
                    <% if(searchParams.minPrice || searchParams.maxPrice) { %>
                        <p class="mt-1 text-muted">
                            Price range: 
                            <strong>
                                ₹<%= searchParams.minPrice || '0' %> - ₹<%= searchParams.maxPrice || '∞' %>
                            </strong>
                        </p>
                    <% } %>
                </div>
            <% } else { %>
                <h3>No listings found</h3>
                <p>There are currently no listings available. Check back later for new listings.</p>
                <div class="mt-3">
                    <a href="/listings/new" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add Your Listing
                    </a>
                </div>
            <% } %>
        </div>
    <% } %>
</div>



<script>
    // Tax toggle functionality
    let taxSwitch = document.getElementById("flexSwitchCheckDefault");
    taxSwitch.addEventListener("click", () => {
        let taxInfo = document.getElementsByClassName("tax-info");
        for (info of taxInfo) {
            if (taxSwitch.checked) {
                info.style.display = "inline";
            } else {
                info.style.display = "none";
            }
        }
    });
    
    // Enhanced filter functionality with backend integration
    const filters = document.querySelectorAll('.filter');
    const currentCategory = '<%= typeof searchParams !== "undefined" && searchParams.category ? searchParams.category : "" %>';
    
    // Set active filter based on current search params
    filters.forEach(filter => {
        if (filter.dataset.category === currentCategory) {
            filter.classList.add('active');
        }
        
        filter.addEventListener('click', () => {
            const category = filter.dataset.category;
            
            // Get current URL parameters
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('category', category);
            
            // Navigate to filtered results
            window.location.href = `/listings?${urlParams.toString()}`;
        });
    });
    
    // Clear filters functionality
    document.getElementById('clearFilters').addEventListener('click', () => {
        window.location.href = '/listings';
    });
    
    // Auto-submit on sort change
    document.getElementById('sortBy').addEventListener('change', function() {
        this.form.submit();
    });
    
    // Price range validation
    document.getElementById('minPrice').addEventListener('change', function() {
        const maxPrice = document.getElementById('maxPrice');
        if (this.value && maxPrice.value && parseInt(this.value) > parseInt(maxPrice.value)) {
            alert('Minimum price cannot be greater than maximum price');
            this.value = '';
        }
    });
    
    document.getElementById('maxPrice').addEventListener('change', function() {
        const minPrice = document.getElementById('minPrice');
        if (this.value && minPrice.value && parseInt(this.value) < parseInt(minPrice.value)) {
            alert('Maximum price cannot be less than minimum price');
            this.value = '';
        }
    });
      // Search suggestions with API integration
    const searchInput = document.getElementById('searchInput');
    const locationInput = document.getElementById('locationInput');
    const countryInput = document.getElementById('countryInput');
    
    // Enhanced search suggestions with API calls
    function setupSearchSuggestions(input, type) {
        let timeoutId;
        
        input.addEventListener('input', function() {
            clearTimeout(timeoutId);
            const query = this.value.trim();
            
            if (query.length < 2) {
                return;
            }
            
            timeoutId = setTimeout(async () => {
                try {
                    const response = await fetch(`/listings/api/suggestions?q=${encodeURIComponent(query)}&type=${type}`);
                    const suggestions = await response.json();
                    
                    // Remove existing datalist
                    const existingDatalist = document.getElementById(`${type}Suggestions`);
                    if (existingDatalist) {
                        existingDatalist.remove();
                    }
                    
                    // Create new datalist
                    if (suggestions.length > 0) {
                        const datalist = document.createElement('datalist');
                        datalist.id = `${type}Suggestions`;
                        
                        suggestions.forEach(suggestion => {
                            const option = document.createElement('option');
                            option.value = suggestion;
                            datalist.appendChild(option);
                        });
                        
                        document.body.appendChild(datalist);
                        input.setAttribute('list', `${type}Suggestions`);
                    }
                } catch (error) {
                    console.error('Error fetching suggestions:', error);
                }
            }, 300);
        });
    }
    
    // Setup search suggestions for different input types
    setupSearchSuggestions(searchInput, 'general');
    setupSearchSuggestions(locationInput, 'location');
    setupSearchSuggestions(countryInput, 'country');
    
    // Fallback suggestions for common locations and countries
    const popularLocations = ['Mumbai', 'Delhi', 'Bangalore', 'Goa', 'Jaipur', 'Kolkata', 'Chennai', 'Hyderabad'];
    const popularCountries = ['India', 'USA', 'UK', 'France', 'Japan', 'Australia', 'Germany', 'Italy'];
    
    function addFallbackDatalist(input, suggestions, id) {
        const datalist = document.createElement('datalist');
        datalist.id = id;
        
        suggestions.forEach(suggestion => {
            const option = document.createElement('option');
            option.value = suggestion;
            datalist.appendChild(option);
        });
        
        document.body.appendChild(datalist);
        input.setAttribute('list', id);
    }
    
    // Add fallback suggestions on page load
    setTimeout(() => {
        if (!locationInput.hasAttribute('list')) {
            addFallbackDatalist(locationInput, popularLocations, 'locationFallback');
        }
        if (!countryInput.hasAttribute('list')) {
            addFallbackDatalist(countryInput, popularCountries, 'countryFallback');
        }
    }, 1000);
    
    // Smooth scroll for sticky filters
    window.addEventListener('scroll', () => {
        const filtersElement = document.getElementById('filters');
        if (window.scrollY > 100) {
            filtersElement.style.boxShadow = '0 4px 20px rgba(0,0,0,0.15)';
        } else {
            filtersElement.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)';
        }
    });
    
    // Lazy loading images
    if ('IntersectionObserver' in window) {
        const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    if (img.dataset.src) {
                        img.src = img.dataset.src;
                        img.classList.remove('loading-skeleton');
                        observer.unobserve(img);
                    }
                }
            });
        });
        
        document.querySelectorAll('img[data-src]').forEach(img => {
            imageObserver.observe(img);
        });
    }
    
    // Add loading animation for page transitions
    document.querySelectorAll('.listing-link').forEach(link => {
        link.addEventListener('click', () => {
            document.body.style.cursor = 'wait';
        });
    });
    
    // Search form enhancement
    document.querySelector('.advanced-search-form').addEventListener('submit', function(e) {
        // Remove empty parameters
        const formData = new FormData(this);
        const params = new URLSearchParams();
        
        for (let [key, value] of formData.entries()) {
            if (value.trim() !== '') {
                params.append(key, value.trim());
            }
        }
        
        e.preventDefault();
        window.location.href = `/listings?${params.toString()}`;
    });
</script>