<%- layout("/layouts/boilerplate") %>

<style>
    .hero-section {
        background: linear-gradient(135deg, rgba(254, 66, 77, 0.1) 0%, rgba(255, 107, 122, 0.1) 100%);
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 1rem;
        text-align: center;
    }
    
    .hero-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        background: linear-gradient(135deg, #fe424d 0%, #ff6b7a 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .hero-subtitle {
        font-size: 1.2rem;
        color: #666;
        margin-bottom: 0;
    }
    
    #filters {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 1rem;
        padding: 1.5rem 0;
        border-bottom: 2px solid #f0f0f0;
        margin-bottom: 2rem;
        position: sticky;
        top: 80px;
        background: white;
        z-index: 100;
        border-radius: 1rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    
    .filter {
        text-align: center;
        padding: 1rem 1.5rem;
        border-radius: 1rem;
        transition: all 0.3s ease;
        cursor: pointer;
        background: white;
        border: 2px solid #e1e5e9;
        min-width: 90px;
        position: relative;
        overflow: hidden;
    }
    
    .filter::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #fe424d 0%, #ff6b7a 100%);
        transition: left 0.3s ease;
        z-index: -1;
    }
    
    .filter:hover::before,
    .filter.active::before {
        left: 0;
    }
    
    .filter:hover,
    .filter.active {
        color: white;
        border-color: #fe424d;
        transform: translateY(-3px);
        box-shadow: 0 6px 20px rgba(254, 66, 77, 0.3);
    }
    
    .filter i {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
        display: block;
        transition: transform 0.3s ease;
    }
    
    .filter:hover i {
        transform: scale(1.1);
    }
    
    .filter p {
        font-size: 0.85rem;
        margin: 0;
        font-weight: 600;
        letter-spacing: 0.5px;
    }
    
    .tax-toggle {
        border: 2px solid #333;
        border-radius: 1rem;
        padding: 1rem 1.5rem;
        display: flex;
        align-items: center;
        background: white;
        transition: all 0.3s ease;
        margin-left: auto;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    .tax-toggle:hover {
        border-color: #fe424d;
        box-shadow: 0 4px 15px rgba(254, 66, 77, 0.2);
        transform: translateY(-2px);
    }
    
    .tax-toggle label {
        font-weight: 600;
        color: #333;
        cursor: pointer;
    }
    
    .listings-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
    }
    
    .listing-item {
        position: relative;
        border-radius: 1rem;
        overflow: hidden;
        background: white;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }
    
    .listing-item:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 30px rgba(0,0,0,0.15);
    }
    
    .listing-image {
        position: relative;
        overflow: hidden;
    }
    
    .listing-image img {
        width: 100%;
        height: 250px;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .listing-item:hover .listing-image img {
        transform: scale(1.1);
    }
    
    .listing-info {
        padding: 1.5rem;
    }
    
    .listing-title {
        font-size: 1.1rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: #333;
    }
    
    .listing-price {
        font-size: 1rem;
        font-weight: 600;
        color: #fe424d;
        margin-bottom: 0.5rem;
    }
    
    .tax-info {
        display: none;
        font-size: 0.85rem;
        color: #666;
        font-style: italic;
    }
    
    .listing-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: rgba(255, 255, 255, 0.95);
        color: #fe424d;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-weight: 600;
        font-size: 0.85rem;
        backdrop-filter: blur(10px);
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #666;
    }
    
    .empty-state i {
        font-size: 4rem;
        color: #fe424d;
        margin-bottom: 1rem;
    }
    
    .loading-skeleton {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
    }
    
    @keyframes loading {
        0% { background-position: 200% 0; }
        100% { background-position: -200% 0; }
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
        .hero-title {
            font-size: 2rem;
        }
        
        .hero-subtitle {
            font-size: 1rem;
        }
        
        #filters {
            top: 70px;
            padding: 1rem;
            gap: 0.5rem;
            justify-content: center;
        }
        
        .filter {
            min-width: 70px;
            padding: 0.75rem 1rem;
        }
        
        .filter i {
            font-size: 1.2rem;
        }
        
        .filter p {
            font-size: 0.75rem;
        }
        
        .tax-toggle {
            margin-left: 0;
            margin-top: 1rem;
            width: 100%;
            justify-content: center;
        }
        
        .listings-grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }
        
        .listing-image img {
            height: 200px;
        }
        
        .listing-info {
            padding: 1rem;
        }
    }
    
    @media (max-width: 576px) {
        .hero-section {
            padding: 1.5rem 1rem;
            margin: 1rem 0;
        }
        
        .hero-title {
            font-size: 1.8rem;
        }
        
        #filters {
            padding: 0.75rem;
            border-radius: 0.5rem;
        }
        
        .filter {
            min-width: 60px;
            padding: 0.5rem 0.75rem;
        }
        
        .listings-grid {
            gap: 1rem;
        }
    }
</style>

<div class="hero-section">
    <h1 class="hero-title">Find Your Perfect Stay</h1>
    <p class="hero-subtitle">Discover amazing places around the world</p>
</div>

<div id="filters">
    <div class="filter" data-category="trending">
        <div><i class="fa-solid fa-fire"></i></div>
        <p>Trending</p>
    </div>
    <div class="filter" data-category="rooms">
        <div><i class="fa-solid fa-bed"></i></div>
        <p>Rooms</p>
    </div>
    <div class="filter" data-category="food">
        <div><i class="fa-solid fa-utensils"></i></div>
        <p>Food</p>
    </div>
    <div class="filter" data-category="wifi">
        <div><i class="fa-solid fa-wifi"></i></div>
        <p>Wifi</p>
    </div>
    <div class="filter" data-category="pool">
        <div><i class="fa-solid fa-swimmer"></i></div>
        <p>Pool</p>
    </div>
    <div class="filter" data-category="cities">
        <div><i class="fa-solid fa-mountain-city"></i></div>
        <p>Iconic Cities</p>
    </div>
    <div class="filter" data-category="beach">
        <div><i class="fa-solid fa-umbrella-beach"></i></div>
        <p>Beach</p>
    </div>
    <div class="filter" data-category="mountains">
        <div><i class="fa-solid fa-mountain"></i></div>
        <p>Mountains</p>
    </div>
    <div class="filter" data-category="castles">
        <div><i class="fa-solid fa-chess-rook"></i></div>
        <p>Castles</p>
    </div>
    <div class="filter" data-category="adventure">
        <div><i class="fa-solid fa-bicycle"></i></div>
        <p>Adventure</p>
    </div>
    <div class="filter" data-category="hiking">
        <div><i class="fa-solid fa-hiking"></i></div>
        <p>Hiking</p>
    </div>

    <div class="tax-toggle">
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault">
            <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
        </div>
    </div>
</div>

<div class="listings-grid">
    <% if(allListings && allListings.length > 0) { %>
        <% for(let listing of allListings) { %>
            <a href="/listings/<%= listing._id %>" class="listing-link">
                <div class="listing-item">
                    <div class="listing-image">
                        <img src="<%= listing.image.url %>" alt="<%= listing.title %>" loading="lazy">
                        <div class="listing-badge">
                            &#8377;<%= listing.price.toLocaleString("en-IN") %>/night
                        </div>
                    </div>
                    <div class="listing-info">
                        <h3 class="listing-title"><%= listing.title %></h3>
                        <p class="listing-price">
                            &#8377; <%= listing.price.toLocaleString("en-IN") %> /night
                            <span class="tax-info">+18% GST</span>
                        </p>
                    </div>
                </div>
            </a>
        <% } %>
    <% } else { %>
        <div class="empty-state">
            <i class="fas fa-home"></i>
            <h3>No listings found</h3>
            <p>Try adjusting your filters or check back later for new listings.</p>
        </div>
    <% } %>
</div>



<script>
    // Tax toggle functionality
    let taxSwitch = document.getElementById("flexSwitchCheckDefault");
    taxSwitch.addEventListener("click", () => {
        let taxInfo = document.getElementsByClassName("tax-info");
        for (info of taxInfo) {
            if (taxSwitch.checked) {
                info.style.display = "inline";
            } else {
                info.style.display = "none";
            }
        }
    });
    
    // Filter functionality
    const filters = document.querySelectorAll('.filter');
    const listings = document.querySelectorAll('.listing-item');
    
    filters.forEach(filter => {
        filter.addEventListener('click', () => {
            // Remove active class from all filters
            filters.forEach(f => f.classList.remove('active'));
            
            // Add active class to clicked filter
            filter.classList.add('active');
            
            // Get category
            const category = filter.dataset.category;
            
            // Filter listings (this would need backend implementation)
            // For now, just visual feedback
            console.log(`Filtering by: ${category}`);
        });
    });
    
    // Smooth scroll for sticky filters
    window.addEventListener('scroll', () => {
        const filtersElement = document.getElementById('filters');
        if (window.scrollY > 100) {
            filtersElement.style.boxShadow = '0 4px 20px rgba(0,0,0,0.15)';
        } else {
            filtersElement.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)';
        }
    });
    
    // Lazy loading images
    if ('IntersectionObserver' in window) {
        const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    img.src = img.dataset.src;
                    img.classList.remove('loading-skeleton');
                    observer.unobserve(img);
                }
            });
        });
        
        document.querySelectorAll('img[data-src]').forEach(img => {
            imageObserver.observe(img);
        });
    }
    
    // Add loading animation for page transitions
    document.querySelectorAll('.listing-link').forEach(link => {
        link.addEventListener('click', () => {
            document.body.style.cursor = 'wait';
        });
    });
</script>